{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","boardSquares","row","boardRow","col","push","Game","state","history","Array","fill","xIsNext","stepNumber","isDraw","step","this","setState","slice","length","calculateWinner","concat","currentState","winner","status","moves","map","move","desc","jumpTo","handleClick","React","Component","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gOAIA,SAASA,EAAOC,GACf,OACC,wBACCC,UAAU,SACVC,QAAS,kBAAKF,EAAME,WAFrB,SAIEF,EAAMG,QAKV,SAASC,EAAMJ,GAEd,SAASK,EAAaC,GACrB,OACC,cAACP,EAAD,CACCI,MAAOH,EAAMO,QAAQD,GACrBJ,QAAS,kBAAKF,EAAME,QAAQI,MAM/B,IADA,IAAIE,EAAe,GACXC,EAAM,EAAGA,EAAM,EAAGA,IAAM,CAE/B,IADA,IAAIC,EAAW,GACPC,EAAM,EAAGA,EAAM,EAAGA,IACzBD,EAASE,KAAKP,EAAoB,EAANI,EAAWE,IAExCH,EAAaI,KAAK,qBAAKX,UAAU,YAAf,SAA4BS,KAE/C,OACC,8BACEF,I,IAKEK,E,kDACL,WAAYb,GAAO,IAAD,8BACjB,cAAMA,IACDc,MAAQ,CACZC,QAAS,CAAC,CACTR,QAASS,MAAM,GAAGC,KAAK,QAExBC,SAAS,EACTC,WAAY,EACZC,QAAQ,GARQ,E,mDAYXC,GACNC,KAAKC,SAAS,CACbJ,WAAYE,EACZH,QAAUG,EAAO,IAAO,EACxBD,QAAQ,M,kCAIEd,GACX,IAAMS,EAAUO,KAAKR,MAAMC,QAAQS,MAAM,EAAGF,KAAKR,MAAMK,WAAa,GAE9DZ,EADeQ,EAAQA,EAAQU,OAAS,GACjBlB,QAAQiB,QAEjCE,EAAgBnB,IAAYA,EAAQD,KAExCC,EAAQD,GAAKgB,KAAKR,MAAMI,QAAU,IAAK,IAEhB,IAAnBH,EAAQU,QAAcH,KAAKC,SAAS,CAACH,QAAQ,IACjDE,KAAKC,SAAS,CACbR,QAASA,EAAQY,OAAO,CAAC,CACxBpB,QAASA,KAEVY,WAAYJ,EAAQU,OACpBP,SAAUI,KAAKR,MAAMI,a,+BAIb,IAAD,OACFH,EAAUO,KAAKR,MAAMC,QACrBa,EAAeb,EAAQO,KAAKR,MAAMK,YAElCU,EAASH,EAAgBE,EAAarB,SAExCuB,EAASD,EAAM,iBACRA,GADQ,uBAEFP,KAAKR,MAAMI,QAAU,IAAM,KAEtCa,EAAQhB,EAAQiB,KAAI,SAACX,EAAMY,GAChC,IAAMC,EAAOD,EAAI,iBACNA,GADM,mBAGjB,OACC,6BACC,yBAAQ/B,QAAS,kBAAM,EAAKiC,OAAOF,IAAnC,cAA4CC,EAA5C,QADQD,MAKX,OACC,sBAAKhC,UAAU,OAAf,UACC,qBAAKA,UAAU,aAAf,SACC,cAACG,EAAD,CACCG,QAASqB,EAAarB,QACtBL,QAAS,SAACI,GAAD,OAAM,EAAK8B,YAAY9B,QAGlC,sBAAKL,UAAU,YAAf,UACC,gCAAOqB,KAAKR,MAAMM,OAAX,OAA2BU,EAAlC,OACA,6BAAKC,c,GAtESM,IAAMC,WA6EzB,SAASZ,EAAgBnB,GAWvB,IAVA,IAAMgC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAjC,EAAI,EAAGA,EAAIiC,EAAMd,OAAQnB,IAAK,CAAC,IAAD,cACnBiC,EAAMjC,GADa,GAC9BkC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInC,EAAQiC,IAAMjC,EAAQiC,KAAOjC,EAAQkC,IAAMlC,EAAQiC,KAAOjC,EAAQmC,GACpE,OAAOnC,EAAQiC,GAGnB,OAAO,KAKTG,IAASC,OACR,cAAC/B,EAAD,IACAgC,SAASC,eAAe,W","file":"static/js/main.afb2dda0.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props){\n\treturn (\n\t\t<button\n\t\t\tclassName=\"square\"\n\t\t\tonClick={()=> props.onClick()}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t\t);\n\t}\n\nfunction Board(props){ \n\n\tfunction renderSquare(i) {\n\t\treturn (\n\t\t\t<Square \n\t\t\t\tvalue={props.squares[i]} \n\t\t\t\tonClick={()=> props.onClick(i)}\t\n\t\t\t/>\n\t\t);\n\t}\n\n\tlet boardSquares = [];\n\tfor(let row = 0; row < 3; row++){\n\t\tlet boardRow = [];\n\t\tfor(let col = 0; col < 3; col++){\n\t\t\tboardRow.push(renderSquare((row * 3) + col));\n\t\t}\n\t\tboardSquares.push(<div className=\"board-row\">{boardRow}</div>);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{boardSquares}\n\t\t</div>\n\t);\n}\n\nclass Game extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [{\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t}],\n\t\t\txIsNext: true,\n\t\t\tstepNumber: 0,\n\t\t\tisDraw: false,\n\t\t};\n\t}\n\n\tjumpTo(step){\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: (step % 2) === 0,\n\t\t\tisDraw: false,\n\t\t});\n\t}\n\n\thandleClick(i){\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst currentState = history[history.length - 1];\n\t\tconst squares = currentState.squares.slice();\n\n\t\tif (calculateWinner(squares) || squares[i]) return;\n\n\t\tsquares[i] = this.state.xIsNext ? 'X': 'O';\n\n\t\tif (history.length === 9) this.setState({isDraw: true});\n\t\tthis.setState({\n\t\t\thistory: history.concat([{\n\t\t\t\tsquares: squares,\n\t\t\t}]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst currentState = history[this.state.stepNumber];\n\n\t\tconst winner = calculateWinner(currentState.squares);\n\n\t\tlet status = winner ?\n\t\t\t`Winner ${winner}` :\n\t\t\t`Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n\n\t\tconst moves = history.map((step, move)=>{\n\t\t\tconst desc = move ?\n\t\t\t\t`Go to #${move}` :\n\t\t\t\t`Go to game start`;\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button onClick={() => this.jumpTo(move)}> {desc} </button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={currentState.squares}\n\t\t\t\t\t\tonClick={(i)=> this.handleClick(i)}/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{ this.state.isDraw ? `Draw`:status } </div>\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t);\n\t}\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n\t<Game />,\n\tdocument.getElementById('root')\n\t);\n"],"sourceRoot":""}